# Rules are defined in the first column
# I for INSERT, insert the definition into the nox character
# Insert rules are defined by
# I;; Nox Attribute Name; Value
# Change Rules are defined by
# C;Sphere attribute name; Nox attribute name; value (constant or as a python expression returning a string)
# D for Delete rules, Remove an obsolete definition, you may use a * as a wildcard at the end of the string,
# denouncing that the attribute should start with the given value
# D; Sphere attribute name [*]
# T for Take rules, take the original value of sphere and assign it to the given Nox attribute
# T;Sphere attribute;Nox Attribute
# Reserved words: = to start a python expression
# glob.accNameTable[<index>] for the nox account number of the account with name <index>
# glob.serials for a counter variable increased after every worldchar
# value for the string in the sphere charfile for the current attribute (which is the one defined in column 2)
# decimal(value) for the decimal representation of a hex value (no tests made, if it is really a hex value)

[0E80]
MAPPING $item_brass_box

[0E79]
MAPPING $item_pouch

[0E75]
MAPPING $item_backpack

[0E76]
MAPPING $item_leather_bag

[I_BAG]
MAPPING $item_leather_bag

[09AA]
MAPPING $item_wooden_box1_2

[I_BOX_WOOD]
MAPPING $item_wooden_box1_2

[09A8]
MAPPING $item_metal_box

[I_BOX_BRASS]
MAPPING $item_metal_box

[0E7D]
MAPPING $item_wooden_box1_1

[0E7C]
MAPPING $item_silver_chest

[i_pouch]
MAPPING $item_pouch

[i_chest_metal]
MAPPING $item_metal_chest1
I;;SCRIPTID;2502
T;TYPE;TYPE;=mapSphereType(value, "t_container_locked")
C;LINK;MORE;=findHouseLink(value)

[i_chest_metal_brass]
MAPPING $item_metal_chest1
I;;SCRIPTID;2502
T;TYPE;TYPE;=mapSphereType(value, "t_container_locked")
C;LINK;MORE;=findHouseLink(value)

[i_vendorbox]
T;NAME;NAME;a backpack
I;;NAME2;#
I;;ID;3701
I;;SCRIPTID;310101
T;X;X;0
T;Y;Y;0
T;Z;Z;0
I;;TYPE;1
I;;DYEABLE;1
I;;ATT;5
I;;PRIV;1
C;LAYER;LAYER;=chooseSellBox(value)
C;CONT;CONT;=glob.serialIndex[value]

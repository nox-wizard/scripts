// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// || NoX-Wizard	: Embedded Small Scripts			||
// || Maintained by	: Luxor, Sparhawk				||
// || Last Update	: 06-apr-2003					||
// || Designed for NXW 	: 0.82						||
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#if defined _nxw_set_api_
  #endinput
#endif
#define _nxw_set_api_

/*! \page p_set Set
* \section set Set, Contenitori di oggetti
* <br>
* <br>
* Un set é un vettore che può contenere un qualsiasi oggetto, quindi sia item che char. <br>
* Può essere riempito attraverso le funzioni predefinite oppure "manualmente" dallo scripter <br><br>
* Alcuni esempi:
* <UL>
* <LI>un semplice esempio di come mandare a un player la lista degli altri giocatori in zona ( \ref esempio1.sma )
* </UL>
*/

/** \example esempio1.sma
 * Primo esempio sui set
 */


/*!
\author Xanathar
\fn set_open()
\brief
*/
native set_open();

/*!
\author Xanathar
\fn set_close(const set)
\brief
*/
native set_close(const set);

/*!
\author Endymion
\fn set_rewind(const set)
\brief Rewind the set
*/
native set_rewind(const set);

/*!
\author Endymion
\fn set_end(const set)
\brief check if given set is at end
\return true if at end
*/
native set_end(const set);

/*!
\author Endymion
\fn set_next(const set)
\brief Move set to next item
*/
native set_next(const set);

/*!
\author Xanathar
\fn set_pop(const set)
\brief
*/
native set_pop(const set);

/*!
\author Xanathar
\fn set_push(const set, const value)
\brief
*/
native set_push(const set, const value);

/*!
\author Xanathar
\fn set_fillOwnedChars(const set, const chrowner, const includestabled = 1, const includeonlyfollowing = 0)
\brief
*/
native set_fillOwnedChars(const set, const chrowner, const includestabled = 1, const includeonlyfollowing = 0);

/*!
\author Xanathar
\fn set_fillChrNearXY(const set, const x, const y, const distance = 10, const excludeofflineplayers = 1)
\brief
*/
native set_fillChrNearXY(const set, const x, const y, const distance = 10, const excludeofflineplayers = 1);

/*!
\author Xanathar
\fn set_fillItemsInCont(const set, const serial, const includeSubCont = 1)
\brief
*/
native set_fillItemsInCont(const set, const serial, const includeSubCont = 1);

/*!
\author Xanathar
\fn set_size(const set)
\brief
*/
native set_size(const set);

/*!
\author Xanathar
\fn set_fillItemsAtXY(const set, const x, const y, const type = -1, const id = -1)
\brief
*/
native set_fillItemsAtXY(const set, const x, const y, const type = -1, const id = -1 );

/*!
\name set_fillItemsNearXY
\author Luxor
\fn set_fillItemsNearXY(const set, const x, const y, const distance = 10, const bExcludeNotMovableItems = 1)
\brief
*/
native set_fillItemsNearXY(const set, const x, const y, const distance = 10, const bExcludeNotMovableItems = 1 );

/*!
\author Sparhawk
\fn set_fillOnline( const set, const onlyNearThisChar = -1, const range = 18 )
\brief Fill set with all online characters unless onlyNearThisChar is a valid char serial then only online pcs within range of char will be collected
*/
native set_fillOnline( const set, const onlyNearThisChar = -1, const range = 18 );



/*!
\brief Create a new party
\author Endymion
\since 0.82
\param leader the leader
\return the party serial
*/
native party_create( const leader );

/*!
\brief Add given member to party
\author Endymion
\since 0.82
\param party the party
\param member new member
\return true or false if error
*/
native party_addMember( const party, const member );

/*!
\brief Remove given member from party
\author Endymion
\since 0.82
\param party the party
\param member member to remove
\return true or false if error
\note party is NOT deleted if after remove there is only a subscriver
*/
native party_delMember( const party, const member );

public party_kickMember( const party, const kicked )
{
	chr_message( kicked, _, "You've been kicked from the party" );
	party_delMember( party, kicked );
}

native party_isCandidate( const party, const candidate );
native party_addCandidate( const party, const leader, const candidate );
native party_delCandidate( const party, const candidate );

native party_getProperty( const party, const prop, const subProp=0, ... );
native party_setProperty( const party, const prop, const subProp=0, ... );

public party_isLeader( const party, const chr )
{
	return ( party_getProperty( party, PP_LEADER ) == chr )? true : false;
}

/*!
\brief Send given message to all members of party
\author Endymion
\param 1 the party
\param 2 color
\param 3 message
\return INVALID if error
*/
native party_broadcast( const party, const color = 0, message[], ... );



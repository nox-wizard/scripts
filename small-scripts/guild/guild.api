// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// || NoX-Wizard	: Embedded Small Scripts			||
// || Maintained by	: Luxor, Sparhawk				||
// || Last Update	: 06-apr-2003					||
// || Designed for NXW 	: 0.82						||
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#if defined _nxw_guild_api_
  #endinput
#endif
#define _nxw_guild_api_

/** \defgroup script_API_guild Guild
 *  \ingroup script_API
 *  \attention not used now
 *  @{
 */

/*!
\author Endymion
\fn guild_setProperty(const guild, const property, const subprop=0, ...)
\brief
*/
native guild_setProperty( const guild, const property, const subprop=0, ...);

/*!
\author Endymion
\fn guild_getProperty(const guild, const property, const subprop=0, ...)
\brief
*/
native guild_getProperty( const guild, const property, const subprop=0, ...);

/*!
\author Endymion
\fn guild_placeStone(const chr, const itm)
\brief
*/
native guild_placeStone( const chr, const itm );

/*!
\author Endymion
\fn guild_addMember(const guild, const chr)
\brief
*/
native guild_addMember( const guild, const chr );

/*!
\brief return the number of members in a guild
\author Sparhawk
\since 0.82
\param 1: the guild
\return number of members or invalid when guild does not exist
*/
native guild_countMember( const guild );

/*!
\brief Add a recuit to a guild
\author Endymion
\since 0.82
\param 1: the guild
\param 2: the new recruit
\return true or false
*/
native guild_addRecruit( const guild, const chr );

/*!
\brief Given recruit are refuse
\author Endymion
\since 0.82
\param 1: the guild
\param 2: the recruit
\return true or false
*/
native guild_refuseRecruit( const guild, const chr )

/*!
\brief return the number of recruits in a guild
\author Sparhawk
\since 0.82
\param 1: the guild
\return number of recruits or invalid
*/
native guild_countRecruit( const guild );

/*!
\author Endymion
\fn guild_getMbrByIdx(const guild, const idx)
\brief
\deprecated use set instead
*/
native guild_getMbrByIdx( const guild, const idx );

/*!
\author Sparhawk
\fn guild_getMaster(const guild)
\param guild: the guild from which you want to get the master
\return serial of guildmaster or invalid
\brief Return the guildmaster for a given guild
*/
native guild_getMaster( const guild );

/*!
\brief check if guild exists
\author Sparhawk
\since 0.82
\param 1: the guild
\return true or false
\fn guild_exists( const guild )
*/
native guild_exists( const guild );

/*!
\brief Get the recruit by given index
\author Endymion
\since 0.82
\param 1: the guild
\param 2: the recruit index
\return the recruit or INVALID
\fn guild_getRecByIdx( const guild, const idx )
*/
native guild_getRecByIdx( const guild, const idx );


/*!
\brief Set the guild the char is a member of
\author Sparhawk
\since 0.82.rc3
\param 1 character serial
\param 2 guild serial
\note	Not implemented yet...
\return 1
\fn chr_setGuild()
*/
native chr_setGuild();

/*!
\brief A member resign from his guild
\author Endymion
\since 0.82
\param guild the guild
\param chr the member
\todo Handle situation if member is guildmaster & if guild is empty after resign
\fn guild_resignMember (const guild, const chr)
*/
native guild_resignMember (const guild, const chr);

/** @} */ // end of script_API_guild

#if defined _itemid_included
  #endinput
#endif
#define _itemid_included

#include "small-scripts/nxw_lib"

enum eWeapontype
{
	SWORD1H=0,
	SWORD2H,
	AXE1H,
	AXE2H,
	MACE1H,
	MACE2H,
	FENCING1H,
	FENCING2H,
	STAVE1H,
	STAVE2H,
	BOW,
	CROSSBOW,
	HEAVYCROSSBOW
};

/*
\brief Check if given id is a weapon
\author Endymion
\since 0.82
\param 1 the id
\param 2 weapon type
\param 3 weapon type 2 ( or INVALID if not used )
\param 4 weapon type 3 ( or INVALID if not used )
\return true or false
*/
native itm_isWeaponLike( const id, type1, type2 = INVALID, type3 = INVALID );

/*!
\author Endymion
\fn iSword( const id )
\brief check if is a sword
*/
stock isSword( const id )
{
	return itm_isWeaponLike( id, SWORD1H );
}

/*!
\author Endymion
\fn isAxe( const id )
\brief check if is an axe
*/
stock isAxe( const id )
{
	return itm_isWeaponLike( id, AXE1H);
}

/*!
\author Endymion
\fn itm_isWeaponLike( const id )
\brief check if is a sword like
*/
stock isSwordType( const id )
{
	return itm_isWeaponLike( id, SWORD1H, AXE1H );
}

/*!
\author Endymion
\fn isMace1H( const id )
\brief check if is a mace 1 handed
*/
stock isMace1H( const id )
{
	return itm_isWeaponLike( id, MACE1H);
}

/*!
\author Endymion
\fn isMace2H( const id )
\brief check if is a mace 1 handed
*/
stock isMace2H( const id )
{
	return itm_isWeaponLike( id, MACE2H);

}

/*!
\author Endymion
\fn isMaceType( const id )
\brief check if is a mace like
*/
stock isMaceType( const id )
{
	return itm_isWeaponLike( id, MACE1H, MACE2H );
}

/*!
\author Endymion
\fn isFencing1H( const id )
\brief check if is a fencing 2 handed
*/
stock isFencing1H( const id )
{
	return itm_isWeaponLike( id, FENCING1H);

}

/*!
\author Endymion
\fn isFencing2H( const id )
\brief check if is a fencing 1 handed
*/
stock isFencing2H( const id )
{
	return itm_isWeaponLike( id, FENCING2H);
}

/*!
\author Endymion
\fn isFencingType( const id )
\brief check if is a fencing like
*/
stock isFencingType( const id )
{
	return itm_isWeaponLike( id, FENCING1H, FENCING2H );
}

/*!
\author Endymion
\fn isBow( const id )
\brief check if is a bow
*/
stock isBow( const id )
{
	return itm_isWeaponLike( id, BOW );
}
/*!
\author Endymion
\fn isCrossbow( const id )
\brief check if is a crossbow
*/
stock isCrossbow( const id )
{
	return itm_isWeaponLike( id, CROSSBOW );

}

/*!
\author Endymion
\fn isHeavyCrossbow( const id )
\brief check if is an heavy crossbow
*/
stock isHeavyCrossbow( const id )
{
	return itm_isWeaponLike( id, HEAVYCROSSBOW );

}

/*!
\author Endymion
\fn isBowType( const id )
\brief check if is an bow like
*/
stock isBowType( const id )
{
	return itm_isWeaponLike( id, BOW, CROSSBOW, HEAVYCROSSBOW );
}

/*!
\author Endymion
\fn isStave( const id )
\brief check if is an stave like
*/
stock isStave( const id )
{
	return itm_isWeaponLike( id, STAVE1H, STAVE2H );

}

/*!
\author Endymion
\fn isSpecialMace( const id )
\brief check if is an special mace like
*/
stock isSpecialMace( const id )
{
	return itm_isWeaponLike( id, STAVE1H, STAVE2H, MACE2H );
}

/*!
\author Endymion
\fn isFieldSpellItem( const id )
\brief check if is an field spell item
*/
public isFieldSpellItem( const id )
{
	if( (id==0x3996) || (id==0x398C) ) return 1; // fire field
	else if( (id==0x3915) || (id==0x3920) ) return 2; // poison field
	else if( (id==0x3979) || (id==0x3967) ) return 3; // paralyse field
	else if( (id==0x3956) || (id==0x3946) ) return 4; // energy field;
	return 0;
}

/*!
\author Endymion
\fn isDagger( const id )
\brief check if is a dagger
*/
public isDagger( const id )
{
    return ( id==0x0F51 || id==0x0F52 );
}

public isCorpse( const id )
{
	return (id==0x2006);
}

public isTree( const id )
{
	return (id==0x0CD0 || id==0x0CD3 || id==0x0CD6 ||
		id==0x0CD8 || id==0x0CDA || id==0x0CDD ||
		id==0x0CE0 || id==0x0CE3 || id==0x0CE6 ||
		(id>=0x0CCA && id<=0x0CCD) ||
		(id>=0x12B8 && id<=0x12BB) ||
		id==0x0D42 || id==0x0D43 || id==0x0D58 ||
		id==0x0D59 || id==0x0D70 || id==0x0D85 ||
		id==0x0D94 || id==0x0D95 || id==0x0D98 ||
		id==0x0Da4 || id==0x0Da8 || id==0x0D58);
}

public isSpellScroll( const id )
{
	return (id>0x1F2C && id<0x1F6D);
}

public isSpellScroll72( const id )
{
	return (id >= 0x1F2D && id <= 0x1F72);
}

public isInstrument( const id )
{
	return (id==0x0E9C || id==0x0E9D || id==0x0E9E || id==0x0EB1 || id==0x0EB2 || id==0x0EB3 || id==0x0EB4);
}

public isArrow( const id )
{
	return ((id==0x0F3F)||(id==0x0F42));
}

public isBolt( const id )
{
	return ((id==0x1BFB)||(id==0x1BFE));
}


public isChaosOrderShield( const id )
{
	return (id>=0x1BC3 && id<=0x1BC5);
}

public isShield( const id )
{
	return ((id>=0x1B72 && id<=0x1B7B) || isChaosOrderShield( id ));
}

public isLog( const id )
{
	return ( id>=0x1BDD && id<=0x1BE2 );
}


public isShaft( const id )
{
	return ( id>=0x1BD4 && id<=0x1BD6 );
}


public isBoard( const id )
{
	return ( id>=0x1BD7 && id<=0x1BDC );
}

public isFeather( const id )
{
	return ( id>=0x1BD1 && id<=0x1BD3 );
}

public isCutLeather( const id )
{
	return ( id==0x1067 || id==0x1068 || id==0x1081 || id==0x1082 );
}

public isHide( const id )
{
	return ( id==0x1078 || id==0x1079 );
}


public isForge( const id )
{
	return ( id==0x0FB1 || ( id>=0x197A && id<=0x19A9 ) );
}

public isAnvil( const id )
{
	return ( id==0x0FAF || id==0x0FB0 );
}

public isCookingPlace( const id )
{
	return ((id>=0x0DE3 && id<=0x0DE9)||
			(id==0x0FAC || id==0x0FB1)||
			(id>=0x197A && id<=0x19B6)||
			(id>=0x0461 && id<=0x0480)||
			(id>=0x0E31 && id<=0x0E33)||
			(id==0x19BB || id==0x1F2B)||
			(id>=0x092B && id<=0x0934)||
			(id>=0x0937 && id<=0x0942)||
			(id>=0x0945 && id<=0x0950)||
			(id>=0x0953 && id<=0x095E)||
			(id>=0x0961 && id<=0x096C) );
}

public isCutCloth( const id )
{
	return ( id>=0x1766 && id<=0x1768 );
}

public isCloth( const id )
{
	return ((id>=0x175D && id<=0x1765)|| isCutCloth( id ) );
}

public isBoltOfCloth( const id )
{
	return ( id>=0x0F95 && id<=0x0F9C );
}

public isChest( const id )
{
	return (( id>=0x09A8 && id<=0x09AB) ||
		    ( id>=0x0E40 && id<=0x0E43) ||
		    ( id==0x0E7C) || (id==0x0E7D) ||
		    ( id==0x0E80));
}

public isFishWater( const id ) // -Fraz- needed water tiles for fishing
{
	return ((id==0x1798) || (id==0x179B) ||
			(id==0x179C) || (id==0x1799) ||
			(id==0x1797) || (id==0x179A) ||
			(id==0x346E) || (id==0x346F) ||
			(id>=0x3470) && (id<=0x3485) ||
			(id>=0x3494) && (id<=0x349F) ||
			(id>=0x34A0) && (id<=0x34AB) ||
			(id>=0x34B8) && (id<=0x34BB) ||
			(id>=0x34BD) && (id<=0x34BF) ||
			(id>=0x34C0) || (id<=0x34C2) ||
			(id>=0x34C3) && (id<=0x34C5) ||
			(id>=0x34C7) && (id<=0x34CA) ||
			(id>=0x34D1) && (id<=0x34D5));
}

public isFish( const id )
{
	return ( id>=0x09CC && id<=0x09CF );
}


public isSign( const id )
{
	return ((id==0x0B95 || id==0x0B96)|| (id>=0x0BA3 && id<=0x0C0E)|| (id==0x0C43 || id==0x0C44));
}

public isWoodenSign( const id )
{
	return ((id==0x0BCF || id==0x0BD0));
}

public isBrassSign( const id )
{
	return ((id==0x0BD1 || id==0x0BD2));
}

public isGuildSign( const id )
{
	return ((id >= 0x0BD3 && id <= 0x0C0A));
}

public isTradeSign( const id )
{
	return ((id==0x0B95 || id==0x0B96) ||
			(id >= 0x0BA3 && id <= 0x0BCE));
}

public isBankSign( const id )
{
	return ((id >= 0x0C0B && id <= 0x0C0C));
}

public isTheatreSign( const id )
{
	return ((id >= 0x0C0D && id <= 0x0C0E));
}

public isBook( const id )
{
	return (id == 0xE3B || id == 0xEFA || id == 0xFBD || id == 0xFBE || 0xFEF <= id <= 0xFF4);
}

public HeighIs40(const id)
{
	return( 0x233C<=id<=0x234A );
}

public HeighIs35(const id)
{
	return( 
	(0x461<=id<=0x465) 
	|| (0x46B<=id<=0x46F) 
	|| (0x92B<=id<=0x92E) 
	|| (0x930<=id<=0x933)
	|| (0x937<=id<=0x948)
	|| (id == 0xD56)
	);
}

public HeighIs30(const id)
{
	return(0x248B<=id<=0x248C);
}

public HeighIs26(const id)
{
	return( 
	(0x8CF<=id<=0x8D0) 
	|| (0x8D3<=id<=0x8D4) 
	|| (0x8DA<=id<=0x8DB) 
	|| (0x8DE<=id<=0x8DF)
	);
}

public HeighIs24(const id)
{
	return( 
	(0x027D<=id<=0x0280) 
	|| (0x949<=id<=0x96C) 
	|| (id==0x106D) 
	|| (id==3961)
	);
}

public HeighIs22(const id)
{
	return( 
	(0x7A<=id<=0x8F) 
	|| (0x241<=id<=0x24A) 
	|| (0x25C<=id<=0x26A)
	|| (id==0x314)
	|| (id==0x316)
	|| (id==0x318)
	|| (id==0x31A)
	|| (id==0x31C)
	|| (id==0x31E)
	|| (id==0x320)
	|| (id==0x322)
	|| (id==0x79F)
	|| (id==0x7B0)
	|| (id==0x7B9)
	|| (id==0x7F4)
	|| (0x8A5<=id<=0x8A6)
	|| (0x2166<=id<=0x2169)
	|| (0x21E5<=id<=0x21E8)
	|| (0x249D<=id<=0x249E)
	|| (0x24A1<=id<=0x24A2)
	|| (id==0x24A7)
	|| (id==0x24EC)
	|| (id==0x24EE)
	|| (id==0x24F1)
	|| (id==0x24F3)
	|| (id==0x2A30)
	|| (id==0x2A33)
	|| (id==0x2A36)
	|| (id==0x2A39)
	);
}

public HeighIs21(const id)
{
	return( 
	(0x7FD<=id<=0x818) 
	|| (id==3961)
	);
}

public HeighIs20(const id)
{
	return( 
	(0x6<=id<=0xF) 
	|| (0x1A<=id<=0x23)
	|| (0x28<=id<=0x2C)
	|| (0x33<=id<=0x3C)
	|| (0x45<=id<=0x4D)
	|| (0x57<=id<=0x5E)
	|| (0x6D<=id<=0x77)
	|| (0x90<=id<=0x99)
	|| (0xA6<=id<=0xB5)
	|| (id == 0xB9)
	|| (0xBA<=id<=0xBC)
	|| (0xC5<=id<=0xDB)
	|| (0xE4<=id<=0xE5)
	|| (0xE8<=id<=0x109)
	|| (0x112<=id<=0x116)
	|| (0x11B<=id<=0x124)
	|| (0x127<=id<=0x141)
	|| (0x145<=id<=0x149)
	|| (0x14C<=id<=0x163)
	|| (0x16C<=id<=0x173)
	|| (0x175<=id<=0x181)
	|| (0x186<=id<=0x196)
	|| (0x1A4<=id<=0x1B0)
	|| (0x1B6<=id<=0x1C7)
	|| (0x1CF<=id<=0x1D9)
	|| (0x1DB<=id<=0x1DF)
	|| (0x1E6<=id<=0x1E7)
	|| (0x1F0<=id<=0x1F9)
	|| (0x20F<=id<=0x21A)
	|| (0x221<=id<=0x223)
	|| (0x226<=id<=0x229)
	|| (0x22C<=id<=0x239)
	|| (0x24C<=id<=0x25B)
	|| (0x281<=id<=0x282)
	|| (0x291<=id<=0x2A0)
	|| (0x2A7<=id<=0x2AE)
	|| (0x2B0<=id<=0x2B4)
	|| (0x2BD<=id<=0x2C0)
	|| (0x2C7<=id<=0x2EC)
	|| (0x30E<=id<=0x311)
	|| (id==0x315)
	|| (id==0x317)
	|| (id==0x319)
	|| (id==0x31B)
	|| (id==0x31D)
	|| (id==0x31F)
	|| (id==0x321)
	|| (0x323<=id<=0x365)
	|| (0x368<=id<=0x371)
	|| (0x37F<=id<=0x39B)
	|| (id==0x3A0)
	|| (0x3C7<=id<=0x3CE)
	|| (0x37F<=id<=0x39B)
	|| (0x3D3<=id<=0x3E2)
	|| (0x421<=id<=0x422)
	|| (0x430<=id<=0x435)
	|| (0x438<=id<=0x441)
	|| (0x446<=id<=0x44F)
	|| (0x45D<=id<=0x460)
	|| (id==0x466)
	|| (id==0x46A)
	|| (0x475<=id<=0x480)
	|| (0x482<=id<=0x487)
	|| (0x489<=id<=0x48E)
	|| (0x675<=id<=0x681)
	|| (0x683<=id<=0x6F6)
	|| (id==0x7D6)
	|| (id==0x7D9)
	|| (0x7E2<=id<=0x7F3)
	);
}

/*
0x7F5	20
0x7F6	20
0x7F7	20
0x7F8	20
0x7F9	20
0x7FA	20
0x7FB	20
0x7FC	20
0x821	20
0x822	20
0x823	20
0x824	20
0x825	20
0x826	20
0x827	20
0x828	20
0x829	20
0x82A	20
0x82B	20
0x82C	20
0x82D	20
0x82E	20
0x82F	20
0x830	20
0x831	20
0x832	20
0x833	20
0x935	20
0x936	20
0xA1F	20
0xA20	20
0xA29	20
0xC95	20
0xC96	20
0xC9E	20
0xCAA	20
0xCCA	20
0xCCB	20
0xCCC	20
0xCCD	20
0xCD0	20
0xCD3	20
0xCD6	20
0xCD8	20
0xCDA	20
0xCDD	20
0xCE0	20
0xCE3	20
0xCF8	20
0xCFB	20
0xCFE	20
0xD01	20
0xD30	20
0xD31	20
0xD35	20
0xD37	20
0xD38	20
0xD42	20
0xD43	20
0xD44	20
0xD55	20
0xD57	20
0xD58	20
0xD59	20
0xD5A	20
0xD5B	20
0xD6B	20
0xD6C	20
0xD6E	20
0xD6F	20
0xD70	20
0xD71	20
0xD72	20
0xD85	20
0xD86	20
0xD94	20
0xD9C	20
0xDA0	20
0xDA4	20
0xDA8	20
0x11EC	20
0x11ED	20
0x11EE	20
0x11EF	20
0x1237	20
0x1238	20
0x1239	20
0x123A	20
0x123B	20
0x123C	20
0x12B5	20
0x12B6	20
0x12B7	20
0x12B8	20
0x12B9	20
0x12BA	20
0x12BB	20
0x12BC	20
0x12BD	20
0x1A0B	20
0x1FED	20
0x1FEE	20
0x1FEF	20
0x1FF0	20
0x1FF1	20
0x1FF2	20
0x1FF3	20
0x1FF4	20
0x1FF5	20
0x1FF6	20
0x1FF7	20
0x1FF8	20
0x1FF9	20
0x1FFA	20
0x1FFB	20
0x1FFC	20
0x21C5	20
0x21C6	20
0x21C7	20
0x21C8	20
0x21C9	20
0x21CA	20
0x21CB	20
0x21CC	20
0x21D5	20
0x21D6	20
0x21D7	20
0x21D8	20
0x21D9	20
0x21DA	20
0x21DC	20
0x21FD	20
0x21FF	20
0x2200	20
0x2201	20
0x2204	20
0x2236	20
0x2237	20
0x2238	20
0x2239	20
0x224A	20
0x224B	20
0x224C	20
0x224D	20
0x2311	20
0x2312	20
0x2350	20
0x2351	20
0x2352	20
0x2353	20
0x2354	20
0x2355	20
0x2356	20
0x2357	20
0x2358	20
0x2359	20
0x235A	20
0x235B	20
0x235C	20
0x235D	20
0x235E	20
0x235F	20
0x2360	20
0x2361	20
0x2362	20
0x2363	20
0x2364	20
0x2365	20
0x2366	20
0x2367	20
0x2368	20
0x2369	20
0x236A	20
0x236B	20
0x241F	20
0x2420	20
0x2421	20
0x2422	20
0x2423	20
0x2424	20
0x246C	20
0x246D	20
0x246E	20
0x246F	20
0x2470	20
0x2471	20
0x2472	20
0x2473	20
0x2474	20
0x2475	20
0x2478	20
0x2479	20
0x247A	20
0x247B	20
0x247C	20
0x2485	20
0x2486	20
0x2487	20
0x248A	20
0x2495	20
0x2496	20
0x2497	20
0x2498	20
0x24A8	20
0x24AD	20
0x24AE	20
0x24AF	20
0x24B0	20
0x24B1	20
0x24B2	20
0x24B3	20
0x24B4	20
0x24B5	20
0x24B6	20
0x24B7	20
0x24B8	20
0x24B9	20
0x24BA	20
0x24EA	20
0x24F4	20
0x24F5	20
0x24F6	20
0x24F7	20
0x24F8	20
0x24F9	20
0x24FA	20
0x24FB	20
0x24FC	20
0x24FD	20
0x24FE	20
0x24FF	20
0x2500	20
0x2501	20
0x2502	20
0x2503	20
0x2504	20
0x2505	20
0x2506	20
0x2507	20
0x2508	20
0x2509	20
0x250A	20
0x250B	20
0x250C	20
0x250D	20
0x250E	20
0x250F	20
0x2510	20
0x2511	20
0x2512	20
0x2513	20
0x2514	20
0x2515	20
0x2516	20
0x2517	20
0x2518	20
0x2519	20
0x251A	20
0x251B	20
0x251C	20
0x251D	20
0x251E	20
0x251F	20
0x2520	20
0x2521	20
0x2522	20
0x2523	20
0x2524	20
0x2525	20
0x2526	20
0x2527	20
0x2528	20
0x2529	20
0x252A	20
0x252B	20
0x252C	20
0x252D	20
0x252E	20
0x252F	20
0x2530	20
0x2531	20
0x2532	20
0x2533	20
0x2534	20
0x2535	20
0x2536	20
0x2537	20
0x2538	20
0x2539	20
0x253A	20
0x253B	20
0x253C	20
0x253D	20
0x253E	20
0x253F	20
0x2540	20
0x2541	20
0x2542	20
0x2543	20
0x2544	20
0x2545	20
0x2546	20
0x2547	20
0x2548	20
0x2549	20
0x254A	20
0x254B	20
0x254C	20
0x254D	20
0x254E	20
0x254F	20
0x2550	20
0x2551	20
0x2552	20
0x2553	20
0x26D0	20
0x26D1	20
0x26D2	20
0x26D3	20
0x26D4	20
0x26D5	20
0x26D6	20
0x26D7	20
0x26D8	20
0x26D9	20
0x26EF	20
0x26F0	20
0x26F1	20
0x26F2	20
0x26F3	20
0x26F4	20
0x26F6	20
0x2715	20
0x2716	20
0x2717	20
0x2718	20
0x2719	20
0x271C	20
0x271F	20
0x2755	20
0x2756	20
0x2757	20
0x2758	20
0x2759	20
0x275C	20
0x2762	20
0x285F	20
0x2862	20
0x2865	20
0x2866	20
0x2869	20
0x286A	20
0x286B	20
0x286C	20
0x286D	20
0x288A	20
0x288D	20
0x2890	20
0x2893	20
0x2894	20
0x2895	20
0x2898	20
0x289B	20
0x289E	20
0x289F	20
0x28A0	20
0x28A3	20
0x293A	20
0x293D	20
0x2940	20
0x2943	20
0x2946	20
0x2949	20
0x294C	20
0x294F	20
0x2952	20
0x2955	20
0x2958	20
0x295B	20
0x2990	20
0x2991	20
0x2994	20
0x2997	20
0x299A	20
0x299D	20
0x299E	20
0x299F	20
0x29A0	20
0x29A1	20
0x29A2	20
0x29A3	20
0x29A4	20
0x29A5	20
0x29A6	20
0x29A7	20
0x29A8	20
0x29A9	20
0x29AA	20
0x29AB	20
0x29AC	20
0x29AD	20
0x29AE	20
0x29AF	20
0x29B0	20
0x29B1	20
0x29B2	20
0x29B3	20
0x29B4	20
0x29B5	20
0x29B6	20
0x29B7	20
0x29B8	20
0x29B9	20
0x29BA	20
0x29BB	20
0x29BC	20
0x29BD	20
0x29BE	20
0x29BF	20
0x29DC	20
0x29DD	20
0x29DE	20
0x29DF	20
0x29E0	20
0x29E1	20
0x29E2	20
0x29E3	20
0x29E4	20
0x29E5	20
0x29E6	20
0x29E7	20
0x29E8	20
0x29E9	20
0x29EA	20
0x29EB	20
0x29EC	20
0x29ED	20
0x29EE	20
0x29EF	20
0x29F0	20
0x29F1	20
0x29F2	20
0x29F3	20
0x29F4	20
0x29F5	20
0x29F6	20
0x29F7	20
0x29F8	20
0x29F9	20
0x29FA	20
0x29FB	20
0x29FC	20
0x2A05	20
0x2A06	20
0x2A07	20
0x2A08	20
0x2A09	20
0x2A0A	20
0x2A0B	20
0x2A0C	20
0x2A0D	20
0x2A0E	20
0x2A0F	20
0x2A10	20
0x2A11	20
0x2A12	20
0x2A13	20
0x2A14	20
0x2A15	20
0x2A16	20
0x2A17	20
0x2A18	20
0x2A19	20
0x2A1A	20
0x2A1B	20
0x2A1C	20
0x2A93	20
0x2A94	20
0x2A95	20
0x2A96	20
0x2A97	20
0x3127	20
0x3EF2	20
0x3EF3	20
0x3EF4	20
0x3EF5	20
0x3EF6	20
0x3EF7	20
0x3EF8	20
0x3EF9	20
0x3EFA	20
0x3EFB	20
0x3EFC	20
0x3EFD	20
0x3EFE	20
0x3EFF	20
0x3F00	20
0x3F01	20
0x3F02	20
0x3F03	20
0x3F04	20
0x3F05	20
0x3F06	20
0x3F07	20
0x3F30	20
0x3F31	20
0x3F32	20
0x3F33	20
0x3F34	20
0x3F35	20
0x3F3F	20
0x3F40	20
0x3F41	20
0x3F42	20
0x3F43	20
0x3F44	20
0x3F45	20
0x3F46	20
0x3F47	20
0x3F48	20
0x3F49	20
0x3F4A	20
0x3F4B	20
0x3F4C	20
0x3F4D	20
0x3F4E	20
0x3F4F	20
0x3F50	20
0x3F51	20
0x3F52	20
0x3F53	20
0x3F54	20
0x3F55	20
0x3F56	20
0x3F57	20
0x3F58	20
0x3F59	20
0x3F5A	20
0x3F5B	20
0x3F5C	20
0x3F5D	20
0x3F5E	20
0x3F5F	20
0x3F60	20
0x3F61	20
0x3F62	20
0x3F63	20
0x3F64	20
0x3F67	20
0x3F68	20
0x3F69	20
0x3F6A	20
0x3F6B	20
0x3F6C	20
0x3F6D	20
0x3F6E	20
0x3F6F	20
0x3F70	20
0x3F71	20
0x3F72	20
0x3F73	20
0x3F74	20
0x3F75	20
0x3F76	20
0x3F77	20
0x3F78	20
0x3F79	20
0x3F7A	20
0x3F7B	20
0x3F7C	20
0x3F7D	20
0x3F7E	20
0x3F7F	20
0x3F80	20
0x3F81	20
*/
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
// || NoX-Wizard	: Embedded Small Scripts			||
// || Maintained by	: Luxor, Sparhawk				||
// || Last Update	: 06-apr-2003					||
// || Designed for NXW 	: 0.82						||
// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#if defined _nxw_misc_api_
  #endinput
#endif
#define _nxw_misc_api_

/*!
\author Xanathar
\fn bypass()
\brief Bypasses default server behaviour
*/
native bypass();

/*!
\author Xanathar
\fn setWindowTitle(const format[], ...)
\brief Sets the window title
*/
native setWindowTitle(const format[], ...);

/*!
\author Xanathar
\fn getFrameStatus()
\brief Gets the current frame status
*/
native getFrameStatus();


/*!
\author Xanathar
\fn getNXWVersion()
\brief Gets the NoX-Wizard engine version
*/
native getNXWVersion();

/*!
\author Xanathar
\fn getNXWVersionType()
\brief
*/
native getNXWVersionType();

/*!
\author Xanathar
\fn getNXWPlatform()
\brief Gets the platform which NoX-Wizard is running on
*/
native getNXWPlatform();

/*!
\author Xanathar
\fn cfgServerOption(const format[], ...)
\param format[]: the CFG command to be executed
\brief Performs a CFG command configuring a server.scp entry
*/
native cfgServerOption(const format[], ...);

/*!
\author Luxor
\fn weblaunch(const socket,const format[], ...)
\param socket: the socket
\param format[]: the URL to be opened by the web client
\brief Sends a request to the given socket to launch its web client
*/
native weblaunch(const socket,const format[], ...);

/*!
\author Luxor
\fn broadcast(const format[], ...)
\param format[]: the message to broadcast
\brief Sends a broadcast message
*/
native broadcast(const format[], ...);

/*!
\author Endymion, changed by Wintermute
\fn getIntFromDefine(const define[], const checkDefine = true)
\param define[]: the define
\param checkDefine: true if a logmessage should be displayed in the console if the define is not available
\brief Get define Number
*/
native getIntFromDefine(const define[],  checkDefine=true);

